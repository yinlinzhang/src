<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:views="components.views.*"
			   minWidth="955" minHeight="600"
			   creationComplete="creationCompleteHandler(event)">
	<fx:Style source="ClassicalFireworks.css"/>
	
	<fx:Script>
		<![CDATA[
			import components.events.LoginEvent;
			import components.events.StateChangeEvent;
			import components.views.SigninPopup;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.managers.ToolTipManager;
			
			// milliseconds (default 10000)
			ToolTipManager.hideDelay = 2500;
			
			private var signinPopup:SigninPopup;
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				// TODO Auto-generated method stub
				categoryList.contentLinkBar.dataProvider = categoryViewStack.contentViewStack;
				categoryViewStack.contentMusicView.contentBar.tarBar.dataProvider =
					categoryViewStack.contentMusicView.musicViewStack;
				
				this.addEventListener(LoginEvent.LOGIN, loginHandler);
				this.addEventListener(LoginEvent.SIGNIN, signinHandler);
				this.addEventListener(StateChangeEvent.ChangeToMusicState, changeToMusicState);
				this.addEventListener(StateChangeEvent.ChangeToMainState, changeToMainState);
			}
			
			private function changeToMusicState(event:StateChangeEvent):void {
				this.currentState = "MusicLibraryState";
			}
			
			private function changeToMainState(event:StateChangeEvent):void {
				this.currentState = "MainState";
			}
			
			private function loginHandler(event:LoginEvent):void {
				signinPopup = new SigninPopup();
				PopUpManager.addPopUp(signinPopup, this, true);
				PopUpManager.centerPopUp(signinPopup);
			}
			
			private function signinHandler(event:LoginEvent):void {
				Alert.show("SIGNIN");//TODO
				/*
				loginPopup = new SigninPopup();
				//popup.addEventListener(, loginHandler);
				PopUpManager.addPopUp(loginPopup, this, true);
				//				/PopUpManager.centerPopUp(loginPopup);
				PopUpManager.bringToFront(loginPopup);
				//PopUpManager.*/
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="MainState"/>
		<s:State name="MusicLibraryState"/>
	</s:states>
	<s:transitions>
		<s:Transition fromState="MainState" toState="MusicLibraryState">
			<!--<s:Fade target="{myImage}" duration="3000"/>-->
			<s:Move xFrom="{this.width}" yFrom="0" xTo="0" yTo="0" target="{musicLibraryStateGroup}" duration="1000"/>
		</s:Transition>
		<s:Transition fromState="MusicLibraryState" toState="MainState">
			<!--<s:Fade target="{myImage}" duration="3000"/>-->
			<s:Move xFrom="0" yFrom="0" xTo="{this.width}" yTo="0" target="{musicLibraryStateGroup}" duration="1000"/>
		</s:Transition>
	</s:transitions>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:controlBarLayout>
		<s:BasicLayout/>
	</s:controlBarLayout>
	
	<s:controlBarContent>
		<!--<s:HGroup width="100%" height="20%">-->
			<s:BorderContainer width="100%" height="100%" backgroundAlpha="0">
				<s:Button skinClass="components.skins.HomeButtonSkin">
					
				</s:Button>
				<views:SigninLoginView right="10" top="10" width="115" height="20"
									   right.MainState="15" top.MainState="10">
				</views:SigninLoginView>
			</s:BorderContainer>
		<!--</s:HGroup>-->
	</s:controlBarContent>

	<!--backgroundImage="@Embed('assets/pics/windows-7-wallpaper.jpg')"-->
	<s:Group id="mainStateGroup" x="0" y="0" width="100%" height="100%">
		<s:BorderContainer width="100%" height="100%" >
			<!--<s:VGroup x="0" y="0" width="100%" height="100%">-->
				<s:HGroup width="100%" height="100%">
					<s:VGroup width="15%" height="100%">
						<s:BorderContainer width="100%" height="100%"
										   backgroundImageFillMode="scale"
										   backgroundImage="@Embed('assets/pics/rainbow.jpg')">
							<views:CategoryList id="categoryList" width="100%" height="100%"
												horizontalCenter="0" verticalCenter="0">
							</views:CategoryList>
						</s:BorderContainer>
					</s:VGroup>
					<s:HGroup width="85%" height="100%">
						<views:CategoryViewStack id="categoryViewStack" width="100%" height="100%">
						</views:CategoryViewStack>	
					</s:HGroup>
				</s:HGroup>
			<!--</s:VGroup>-->
		</s:BorderContainer>
	</s:Group>

	<s:Group id="musicLibraryStateGroup" x.MusicLibraryState="0" y.MusicLibraryState="0"
			 x.MainState="{this.width}" y.MainState="0"
			 width="{mainStateGroup.width}" height="{mainStateGroup.height}">
		<s:BorderContainer width="100%" height="100%" backgroundAlpha="1.0">
			<s:VGroup width="100%" height="100%">
				<s:Group width="100%" height="10%">
					<s:Button id="back" width="{back.height}" height="100%" label="Button"
							  buttonMode="true" click="this.currentState = 'MainState'"
							  skinClass="components.skins.BackBtnRightArrowSkin"
							  useHandCursor="true" toolTip="Back to Home page"
							  verticalCenter.MainState="0"/>
				</s:Group>
				<s:HGroup width="100%" height="90%">					
					<views:MusicianIntro width="20%" height="100%">
					</views:MusicianIntro>
					<s:VGroup width="80%" height="100%">
						<s:BorderContainer width="100%" height="100%">
							<views:MusicianPlayListView width="100%" height="100%">
								
							</views:MusicianPlayListView>
						</s:BorderContainer>
					</s:VGroup>
				</s:HGroup>
			</s:VGroup>
		</s:BorderContainer>
	</s:Group>
</s:Application>
