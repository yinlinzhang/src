<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:views="components.views.*">
	<fx:Script>
		<![CDATA[
			import components.skins.CountryViewPanelSkin;
			
			import mx.collections.IViewCursor;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var musiciansXML:XML;
			
			
			protected function countryViewGroup_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				queryClassicalMusicians.send();
				
				
			}
			
			protected function queryClassicalMusicians_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				musiciansXML = event.result as XML;
				
				var nations:XMLListCollection = new XMLListCollection(musiciansXML..nation.@name);
				nations.sort = new Sort();
				nations.refresh();
				var nationsCursor:IViewCursor = nations.createCursor();
				
				var alphabetSort:Sort = new Sort();
				alphabetSort.fields = new Array(new SortField("name"));
				
				while(!nationsCursor.afterLast) {
					var musicians:XMLListCollection = new XMLListCollection(
						musiciansXML..nation.(@name == nationsCursor.current.toString()).musician);
					musicians.sort = alphabetSort;
					musicians.refresh();
					var musiciansCursor:IViewCursor = musicians.createCursor();
					
					/* create nation panel */
					var panel:CountryViewPanel = new CountryViewPanel();
					panel.source = Object("assets/pics/" + nationsCursor.current.toString() +".png");
					panel.title = nationsCursor.current.toString();
					panel.setStyle("skinClass", Class(components.skins.CountryViewPanelSkin));
					panel.width = this.width;
					panel.setStyle("backgroundAlpha", "0.5");
					countryViewGroup.addElement(panel);
					
					while(!musiciansCursor.afterLast) {
						/* create musician image */
						var image:MusicianImage = new MusicianImage();
						image.source = Object("assets/pics/" + musiciansCursor.current.name +".jpg");
						panel.showGroup.addElement(image);
						musiciansCursor.moveNext();
					}
					
					nationsCursor.moveNext();
				}
			}
			
			protected function queryClassicalMusicians_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function sortMusician_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
				if (sortMusician.selectedIndex == 0) {
					sortedMusicianByCountry();
				} else if (sortMusician.selectedIndex == 1) {
					sortedMusicianByAlphabet();
				}
			}
			
			private function sortedMusicianByCountry():void {
				
						
//					var musicians:XMLListCollection = new XMLListCollection(
//						musiciansXML..(nation == cursor.current.toString()));
//					musicians.sort = alphabetSort;
//					musicians.refresh();
					/* populate panel */
					
				

				//				var countryGroup:GroupingCollection = new GroupingCollection();
				//				countryGroup.source = musicians;
				//				
				//				var groupingInst:Grouping = new Grouping();
				//				groupingInst.fields = [new GroupingField("nation"), new GroupingField("name")];
				//				countryGroup.grouping = groupingInst;
				//				countryGroup.refresh();
				
				// TODO:
				//				var cursor:IViewCursor = countryGroup.();
				//				var total:Number = 0;
				//				while (!cursor.afterLast)
				//				{
				//					total += Number(cursor.current.price);
				//					cursor.moveNext();
				//				}
				
				
				//				var countrySort:Sort = new Sort();
				//				countrySort.fields = new Array();
				//				countrySort.fields.push(new SortField('nation', true)); // TODO:
				//				
				//				var c:XMLListCollection = musicians;
				//				musicians.sort = countrySort;
				//				musicians.refresh();
				
				//				for each (var m:XML in musicians) {
				//					var musician:Object = Object(m);
				//					var panel:CountryViewPanel = new CountryViewPanel();
				//					//countryViewGroup.addElement()
				//					panel.source = Object("assets/pics/" + musician.nation +".png");
				//					panel.title = musician.name;
				//					panel.setStyle("skinClass", Class(components.skins.CountryViewPanelSkin));
				//					panel.width = this.width;
				//					panel.setStyle("backgroundAlpha", "0.5");
				//					//				panel.backgroundAlpha="0.5";
				//					countryViewGroup.addElement(panel);
				//					var image:MusicianImage = new MusicianImage();
				//					image.source = Object("assets/pics/" + musician.name +".jpg");
				//					panel.addElement(image);
				//				}
			}
			
			private function filterCountry(item:Object):Boolean {
				return true;
			}
			
			private function sortedMusicianByAlphabet():void {
				
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:HTTPService id="queryClassicalMusicians"
					   url="http://127.0.0.1/ClassicalFireworks/assets/configs/ClassicalMusicians.xml"
					   resultFormat="e4x" result="queryClassicalMusicians_resultHandler(event)"
					   fault="queryClassicalMusicians_faultHandler(event)">
		</s:HTTPService>
		
		<s:ArrayList id="sortChoices">
			<fx:String>Sort By Country</fx:String>
			<fx:String>Sort By Alphabet</fx:String>
		</s:ArrayList>
	</fx:Declarations>
	
	<s:DropDownList id="sortMusician" width="150"
					dataProvider="{sortChoices}" selectedIndex="0" change="sortMusician_changeHandler(event)"/>
	<s:Scroller width="100%" height="100%">
		<s:VGroup id="countryViewGroup" width="100%" height="100%"
				  creationComplete="countryViewGroup_creationCompleteHandler(event)">
			<!--
			<views:CountryViewPanel source="@Embed('assets/pics/GER.png')" title="Germany"
			skinClass="components.skins.CountryViewPanelSkin" width="100%" backgroundAlpha="0.5">
			</views:CountryViewPanel>
			<views:CountryViewPanel source="@Embed('assets/pics/AUT.png')" title="Austria"
			skinClass="components.skins.CountryViewPanelSkin" width="100%" backgroundAlpha="0.5">
			</views:CountryViewPanel>
			<views:CountryViewPanel source="@Embed('assets/pics/ITA.png')" title="Italy"
			skinClass="components.skins.CountryViewPanelSkin" width="100%" backgroundAlpha="0.5">
			</views:CountryViewPanel>
			<views:CountryViewPanel source="@Embed('assets/pics/POL.png')" title="Poland"
			skinClass="components.skins.CountryViewPanelSkin" width="100%" backgroundAlpha="0.5">
			</views:CountryViewPanel>
			
			<views:CountryViewPanel source="@Embed('assets/pics/RUS.png')" title="Russia"
			skinClass="components.skins.CountryViewPanelSkin" width="100%" backgroundAlpha="0.5">
			</views:CountryViewPanel>
			<views:CountryViewPanel source="@Embed('assets/pics/FIN.png')" title="Finland"
			skinClass="components.skins.CountryViewPanelSkin" width="100%" backgroundAlpha="0.5">
			</views:CountryViewPanel>
			-->
		</s:VGroup>
	</s:Scroller>
	
</s:VGroup>
